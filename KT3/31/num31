import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        int i = 10;

        long fibonacci = computeFibonacci(i);
        System.out.println("i-ый элемент ряда Фибоначчи: " + fibonacci);

        int maxDigitCount = findMaxDigitCount(fibonacci);
        System.out.println("Наибольшее вхождение цифры: " + maxDigitCount);
    }

    private static long computeFibonacci(int n) {
        long prev1 = 0;
        long prev2 = 1;

        for (int i = 2; i <= n; i++) {
            long current = prev1 + prev2;
            prev1 = prev2;
            prev2 = current;
        }

        return prev2;
    }

    private static int findMaxDigitCount(long number) {
        Map<Integer, Integer> digitCountMap = new HashMap<>();

        while (number > 0) {
            int digit = (int) (number % 10);
            digitCountMap.put(digit, digitCountMap.getOrDefault(digit, 0) + 1);
            number /= 10;
        }

        int maxCount = 0;
        int maxDigit = 0;

        for (Map.Entry<Integer, Integer> entry : digitCountMap.entrySet()) {
            int digit = entry.getKey();
            int count = entry.getValue();

            if (count > maxCount || (count == maxCount && digit > maxDigit)) {
                maxCount = count;
                maxDigit = digit;
            }
        }

        return maxDigit;
    }
}
